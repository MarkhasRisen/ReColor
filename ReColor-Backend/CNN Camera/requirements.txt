# ReColor TensorFlow Colorblind Detection System
# Dependencies for GPU-accelerated real-time color detection and CVD simulation
# ✅ Compatible with Windows 11 + Python 3.10 + RTX 4050 (CUDA 11.2, cuDNN 8.1)

# Core TensorFlow and Machine Learning
tensorflow==2.10.0
tensorflow-gpu==2.10.0  # Explicit GPU build (last Windows-supported version)

# Computer Vision and Image Processing
opencv-python==4.6.0.66
numpy==1.23.5
pillow==9.5.0

# Scientific Computing and Data Processing
scipy==1.9.3
scikit-learn==1.1.3   # For K-means clustering and ML utilities
matplotlib==3.6.2     # For color visualization and analysis

# Data Processing and Analysis
pandas==1.5.2          # For CSV/dataframe operations

# Logging and Data Handling
# colorsys is built-in; no need to install via pip

# System and Performance
psutil==5.9.4          # For system monitoring

# GPU Acceleration Notes:
# - TensorFlow 2.10.0 supports native GPU on Windows
# - Requires CUDA 11.2 + cuDNN 8.1
# - Use NVIDIA driver ≥ 456.38

# Development and Testing (optional)
pytest==7.2.0
pytest-cov==4.0.0
black==22.10.0         # Code formatting
flake8==6.0.0          # Code linting

# Optional: Jupyter for experimentation
jupyter==1.0.0
seaborn==0.12.1        # Statistical plots

# Compatibility Notes:
# - Python 3.10 recommended (3.11+ breaks TF 2.10)
# - Webcam or camera required for real-time detection
# - Minimum 4 GB RAM (8 GB + recommended for training)
# - 2 GB + disk space for models & datasets

# Installation Steps:
# 1. Create env:  python -m venv recolor_env
# 2. Activate env:
#      Windows → recolor_env\Scripts\activate
#      Linux/Mac → source recolor_env/bin/activate
# 3. Install:     pip install -r requirements.txt
# 4. Ensure CUDA 11.2 + cuDNN 8.1 are installed
# 5. Verify GPU:  python -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
